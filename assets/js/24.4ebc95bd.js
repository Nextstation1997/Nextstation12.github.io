(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{190:function(v,_,e){"use strict";e.r(_);var o=e(0),a=Object(o.a)({},function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"java简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java简介","aria-hidden":"true"}},[v._v("#")]),v._v(" java简介")]),v._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[v._v("SUN公司介绍")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://note.youdao.com/yws/api/personal/file/E3CDE486D47A41F2A677828BA1E9B966?method=download&shareKey=475f9504edbf5510585f003a5ccd0a97",alt:"image"}})]),v._v(" "),e("p",[v._v("SUN公司全称是：Stanford University Network.  SUN公司是从斯坦福大学孵化器出的高科技公司。创立后，曾经市值名列IT公司第一位。在2001年时，市值2100亿美元，远超过google公司、IBM公司。SUN公司不仅打败了包括 IBM 在内的全部工作站（Work Station）和小型机（Mini Computer）公司，而且依靠它的 Solaris（一种Unix）和风靡世界的 Java 程序语言，成为在操作系统上最有可能挑战微软的公司。太阳公司不乏能人，它不仅为 Google 培养了 CEO埃里克.施密特和首任工程部副总裁韦恩.罗森（Wayne Rosen），并且在一定程度上奠定了今天 Google 工程部门的基础。当然，今天的SUN公司已经一落千丈，并且被oracle公司收购。sun公司从成立到市值2000亿美元经过了20年，但是走下坡路只用了1年时间！这就是IT行业的残酷性！")])]),v._v(" "),e("h2",{attrs:{id:"java的诞生和核心特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java的诞生和核心特点","aria-hidden":"true"}},[v._v("#")]),v._v(" JAVA的诞生和核心特点")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://note.youdao.com/yws/api/personal/file/F1A4E544F57D48CF8DE081C96827C66F?method=download&shareKey=8835bfa4d9268e2c3ff9a074c3e6e179",alt:"image"}})]),v._v(" "),e("p",[v._v("上世纪90年代初，SUN公司的James Gosling(高司令，^_^)领导的Green项目，着力打造一个分布式的、可以在消费类电子产品（如电视机顶盒）使用的系统架构。")]),v._v(" "),e("p",[v._v("这种架构中，要求写的代码可以运行在各种消费类电子产品中，即要求代码的中立性、跨平台性。")]),v._v(" "),e("p",[v._v("最初，Green项目使用的C++，但是在研发过程中发现C++并不能很好的适应新的需求。于是，这些高人对C++编译器做了改写，仍然不太理想，不太符合跨平台的特性。 牛人有牛人特有的牛脾气，于是，大家决定重起炉灶，开始研发一种新的语言，即JAVA.")]),v._v(" "),e("p",[v._v("经过一年半的研发，整个产品研发完成。但是，很遗憾，消费类电子产品并没有高速的发展起来，JAVA进入蛰伏期。")]),v._v(" "),e("p",[v._v("【注】跨平台特性，始终是JAVA的核心优势！")]),v._v(" "),e("h2",{attrs:{id:"java的飞速发展"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java的飞速发展","aria-hidden":"true"}},[v._v("#")]),v._v(" JAVA的飞速发展")]),v._v(" "),e("p",[v._v("无心插柳柳成荫！90年代中末期，有一个改变世界的大事出现了：互联网的爆发式增长。在传统产业，例如钢铁产业要想取得产量翻番，那需要很多年的时间。但是，在互联网行业都是呈指数级增长，爆炸式的增长。google可以在短短几年就增长到上千亿美元市值。")]),v._v(" "),e("p",[v._v("互联网将各种各样的电脑连到了一起，这时，我们发现电 脑的操作系统各种不同。因此，急需一种跨平台的语言，通过它编写的程序可以在各种平台上运行。JAVA正好符合这种需求。使用JAVA编写的applet程序给了90年代的人们极大的震撼，于是JAVA迎来了他的黄金时代！")]),v._v(" "),e("p",[v._v("JAVA诞生后，经历了如下版本的发展变化：")]),v._v(" "),e("ul",[e("li",[e("p",[e("strong",[v._v("1991年，Sun公司的Green项目，Oak")])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("1995年，推出Java测试版")])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("1996年，JDK1.0")]),v._v(" "),e("code",[v._v("Oak(橡树)")])])])]),v._v(" "),e("p",[e("code",[v._v("初代版本，伟大的一个里程碑，但是是纯解释运行，使用外挂JIT，性能比较差，运行速度慢。")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("1997年 JDK1.1")])])]),v._v(" "),e("p",[e("code",[v._v("JDBC(Java DataBase Connectivity);")])]),v._v(" "),e("p",[e("code",[v._v("支持内部类;")])]),v._v(" "),e("p",[e("code",[v._v("RMI(Remote Method Invocation) ;")])]),v._v(" "),e("p",[e("code",[v._v("反射;")])]),v._v(" "),e("p",[e("code",[v._v("Java Bean;")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("1998年 JDK1.2")]),v._v(" "),e("code",[v._v("Playground(操场)")])])]),v._v(" "),e("p",[e("code",[v._v("集合框架;")])]),v._v(" "),e("p",[e("code",[v._v("JIT(Just In Time)编译器;")])]),v._v(" "),e("p",[e("code",[v._v("对打包的Java文件进行数字签名;")])]),v._v(" "),e("p",[e("code",[v._v("JFC(Java Foundation Classes), 包括Swing 1.0, 拖放和Java2D类库;")])]),v._v(" "),e("p",[e("code",[v._v("Java插件;")])]),v._v(" "),e("p",[e("code",[v._v("JDBC中引入可滚动结果集,BLOB,CLOB,批量更新和用户自定义类型;")])]),v._v(" "),e("p",[e("code",[v._v("Applet中添加声音支持.")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("2000年 JDK1.3")]),v._v(" "),e("code",[v._v("Kestrel(红隼)")])])]),v._v(" "),e("p",[e("code",[v._v("Java Sound API;")])]),v._v(" "),e("p",[e("code",[v._v("jar文件索引;")])]),v._v(" "),e("p",[e("code",[v._v("对Java的各个方面都做了大量优化和增强;")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("2004年 JDK1.4")]),v._v(" "),e("code",[v._v("Kestrel(红隼)")])])]),v._v(" "),e("p",[e("code",[v._v("XML处理;")])]),v._v(" "),e("p",[e("code",[v._v("Java打印服务;")])]),v._v(" "),e("p",[e("code",[v._v("Logging API;")])]),v._v(" "),e("p",[e("code",[v._v("Java Web Start;")])]),v._v(" "),e("p",[e("code",[v._v("JDBC 3.0 API;")])]),v._v(" "),e("p",[e("code",[v._v("断言;")])]),v._v(" "),e("p",[e("code",[v._v("Preferences API;")])]),v._v(" "),e("p",[e("code",[v._v("链式异常处理;")])]),v._v(" "),e("p",[e("code",[v._v("支持IPV6;")])]),v._v(" "),e("p",[e("code",[v._v("支持正则表达式;")])]),v._v(" "),e("p",[e("code",[v._v("引入Imgae I/O API.")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("2004年 JDK5")]),v._v(" "),e("code",[v._v("Tiger(老虎)")])])]),v._v(" "),e("p",[e("code",[v._v("泛型;")])]),v._v(" "),e("p",[e("code",[v._v("增强循环,可以使用迭代方式;")])]),v._v(" "),e("p",[e("code",[v._v("自动装箱与自动拆箱;")])]),v._v(" "),e("p",[e("code",[v._v("类型安全的枚举;")])]),v._v(" "),e("p",[e("code",[v._v("可变参数;")])]),v._v(" "),e("p",[e("code",[v._v("静态引入;")])]),v._v(" "),e("p",[e("code",[v._v("元数据(注解);")])]),v._v(" "),e("p",[e("code",[v._v("Instrumentation;")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("2006年 JDK6")]),v._v(" "),e("code",[v._v("Mustang(野马)")])])]),v._v(" "),e("p",[e("code",[v._v("支持脚本语言;")])]),v._v(" "),e("p",[e("code",[v._v("JDBC 4.0API;")])]),v._v(" "),e("p",[e("code",[v._v("Java Compiler API;")])]),v._v(" "),e("p",[e("code",[v._v("可插拔注解;")])]),v._v(" "),e("p",[e("code",[v._v("增加对Native PKI(Public Key Infrastructure), Java GSS(Generic Security Service),Kerberos和LDAP(Lightweight Directory Access Protocol)支持;")])]),v._v(" "),e("p",[e("code",[v._v("继承Web Services;")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("2011年 JDK7")]),v._v(" "),e("code",[v._v("Dolphin(海豚)")])])]),v._v(" "),e("p",[e("code",[v._v("switch语句块中允许以字符串作为分支条件;")])]),v._v(" "),e("p",[e("code",[v._v("在创建泛型对象时应用类型推断;")])]),v._v(" "),e("p",[e("code",[v._v("在一个语句块中捕获多种异常;")])]),v._v(" "),e("p",[e("code",[v._v("支持动态语言;")])]),v._v(" "),e("p",[e("code",[v._v("支持try-with-resources(在一个语句块中捕获多种异常);")])]),v._v(" "),e("p",[e("code",[v._v("引入Java NIO.2开发包;")])]),v._v(" "),e("p",[e("code",[v._v("数值类型可以用二进制字符串表示,并且可以在字符串表示中添加下划线;")])]),v._v(" "),e("p",[e("code",[v._v("菱形泛型(在创建泛型对象时应用类型推断);")])]),v._v(" "),e("p",[e("code",[v._v("null值的自动处理;")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("2014年 JDK8")])])]),v._v(" "),e("p",[e("code",[v._v("Lambda 表达式 − Lambda允许把函数作为一个方法的参数（函数作为参数传递进方法中。")])]),v._v(" "),e("p",[e("code",[v._v("方法引用 − 方法引用提供了非常有用的语法，可以直接引用已有Java类或对象（实例）的方法或构造器。与lambda联合使用，方法引用可以使语言的构造更紧凑简洁，减少冗余代码。")])]),v._v(" "),e("p",[e("code",[v._v("默认方法 − 默认方法就是一个在接口里面有了一个实现的方法。")])]),v._v(" "),e("p",[e("code",[v._v("新工具 − 新的编译工具，如：Nashorn引擎 jjs、 类依赖分析器jdeps。")])]),v._v(" "),e("p",[e("code",[v._v("Stream API −新添加的Stream API（java.util.stream） 把真正的函数式编程风格引入到Java中。")])]),v._v(" "),e("p",[e("code",[v._v("Date Time API − 加强对日期与时间的处理。")])]),v._v(" "),e("p",[e("code",[v._v("Optional 类 − Optional 类已经成为 Java 8 类库的一部分，用来解决空指针异常。")])]),v._v(" "),e("p",[e("code",[v._v("Nashorn, JavaScript 引擎 − Java 8提供了一个新的Nashorn javascript引擎，它允许我们在JVM上运行特定的javascript应用。")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("2018年 JDK10")])])]),v._v(" "),e("p",[e("code",[v._v("var 局部变量类型推断。")])]),v._v(" "),e("p",[e("code",[v._v("将原来用 Mercurial 管理的众多 JDK 仓库代码，合并到一个仓库中，简化开发和管理过程。")])]),v._v(" "),e("p",[e("code",[v._v("统一的垃圾回收接口。")])]),v._v(" "),e("p",[e("code",[v._v("G1 垃圾回收器的并行完整垃圾回收，实现并行性来改善最坏情况下的延迟。")])]),v._v(" "),e("p",[e("code",[v._v("应用程序类数据 (AppCDS) 共享，通过跨进程共享通用类元数据来减少内存占用空间，和减少启动时间。")])]),v._v(" "),e("p",[e("code",[v._v("ThreadLocal 握手交互。在不进入到全局 JVM 安全点 (Safepoint) 的情况下，对线程执行回调。优化可以只停止单个线程，而不是停全部线程或一个都不停。")])]),v._v(" "),e("p",[e("code",[v._v("移除 JDK 中附带的 javah 工具。可以使用 javac -h 代替。")])]),v._v(" "),e("p",[e("code",[v._v("使用附加的 Unicode 语言标记扩展。")])]),v._v(" "),e("p",[e("code",[v._v("能将堆内存占用分配给用户指定的备用内存设备。")])]),v._v(" "),e("p",[e("code",[v._v("使用 Graal 基于 Java 的编译器，可以预先把 Java 代码编译成本地代码来提升效能。")])]),v._v(" "),e("p",[e("code",[v._v("在 OpenJDK 中提供一组默认的根证书颁发机构证书。开源目前 Oracle 提供的的 Java SE 的根证书，这样 OpenJDK 对开发人员使用起来更方便。")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("2018年 JDK11")])])]),v._v(" "),e("p",[e("code",[v._v("Nest-Based访问控制")])]),v._v(" "),e("p",[e("code",[v._v("动态类文件常量")])]),v._v(" "),e("p",[e("code",[v._v("改善Aarch64 intrinsic")])]),v._v(" "),e("p",[e("code",[v._v("无操作垃圾收集器")])]),v._v(" "),e("p",[e("code",[v._v("消除Java EE和CORBA模块")])]),v._v(" "),e("p",[e("code",[v._v("HTTP客户端(标准)")])]),v._v(" "),e("p",[e("code",[v._v("局部变量的语法λ参数")])]),v._v(" "),e("p",[e("code",[v._v("Curve25519和Curve448关键协议")])]),v._v(" "),e("p",[e("code",[v._v("Unicode 10")])]),v._v(" "),e("p",[e("code",[v._v("飞行记录器")])]),v._v(" "),e("p",[e("code",[v._v("ChaCha20和Poly1305加密算法")])]),v._v(" "),e("p",[e("code",[v._v("发射一列纵队源代码程序")])]),v._v(" "),e("p",[e("code",[v._v("低开销堆分析")])]),v._v(" "),e("p",[e("code",[v._v("传输层安全性(Transport Layer Security,TLS)1.3")])]),v._v(" "),e("p",[e("code",[v._v("动作:一个可伸缩的低延迟垃圾收集器 (实验)")])]),v._v(" "),e("p",[e("code",[v._v("反对Nashorn JavaScript引擎")])]),v._v(" "),e("p",[e("code",[v._v("反对Pack200工具和API")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("2018年 JDK12")])])]),v._v(" "),e("p",[e("code",[v._v("Shenandoah: A Low-Pause-Time Garbage Collector (Experimental) ：新增一个名为 Shenandoah 的垃圾回收器，它通过在 Java 线程运行的同时进行疏散 (evacuation) 工作来减少停顿时间。")])]),v._v(" "),e("p",[e("code",[v._v("Microbenchmark Suite：新增一套微基准测试，使开发者能够基于现有的 Java Microbenchmark Harness（JMH）轻松测试 JDK 的性能，并创建新的基准测试。")])]),v._v(" "),e("p",[e("code",[v._v("Switch Expressions (Preview) ：对 switch 语句进行扩展，使其可以用作语句或表达式，简化日常代码。")])]),v._v(" "),e("p",[e("code",[v._v("JVM Constants API ：引入一个 API 来对关键类文件 (key class-file) 和运行时工件的名义描述（nominal descriptions）进行建模，特别是那些可从常量池加载的常量。")])]),v._v(" "),e("p",[e("code",[v._v("One AArch64 Port, Not Two ：删除与 arm64 端口相关的所有源码，保留 32 位 ARM 移植和 64 位 aarch64 移植。")])]),v._v(" "),e("p",[e("code",[v._v("Default CDS Archives ：默认生成类数据共享（CDS）存档。")])]),v._v(" "),e("p",[e("code",[v._v("Abortable Mixed Collections for G1 ：当 G1 垃圾回收器的回收超过暂停目标，则能中止垃圾回收过程。")])]),v._v(" "),e("p",[e("code",[v._v("Promptly Return Unused Committed Memory from G1 ：改进 G1 垃圾回收器，以便在空闲时自动将 Java 堆内存返回给操作系统。")])])])},[],!1,null,null,null);_.default=a.exports}}]);