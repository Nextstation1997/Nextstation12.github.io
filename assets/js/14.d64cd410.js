(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{217:function(t,a,e){"use strict";e.r(a);var r=e(0),s=Object(r.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"递归结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#递归结构","aria-hidden":"true"}},[t._v("#")]),t._v(" 递归结构")]),t._v(" "),e("p",[t._v("递归是一种常见的解决问题的方法，即把问题逐渐简单化。递归的基本思想就是"),e("code",[t._v("自己调用自己")]),t._v("，一个使用递归技术的方法将会直接或者间接的调用自己。")]),t._v(" "),e("p",[t._v("利用递归可以用简单的程序来解决一些复杂的问题。比如：斐波那契数列的计算、汉诺塔、快排等问题。")]),t._v(" "),e("h4",{attrs:{id:"递归结构包括两个部分："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#递归结构包括两个部分：","aria-hidden":"true"}},[t._v("#")]),t._v(" 递归结构包括两个部分：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("定义递归头。解答：什么时候不调用自身方法。如果没有头，将陷入死循环，也就是递归的结束条件。")])]),t._v(" "),e("li",[e("p",[t._v("递归体。解答：什么时候需要调用自身方法。")])])])])},[],!1,null,null,null);a.default=s.exports}}]);