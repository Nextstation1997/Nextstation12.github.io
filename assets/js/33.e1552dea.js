(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{198:function(t,a,r){"use strict";r.r(a);var e=r(0),s=Object(e.a)({},function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"内存模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内存模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 内存模型")]),t._v(" "),r("h2",{attrs:{id:"栈"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#栈","aria-hidden":"true"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("每个线程私有，不能实现线程间的共享！")])]),t._v(" "),r("li",[r("p",[t._v("局部变量放置于栈中。")])]),t._v(" "),r("li",[r("p",[t._v("栈是由系统自动分配，速度快！栈是一个连续的内存空间！")])]),t._v(" "),r("li",[r("p",[t._v("每个方法被调用时 压入栈中 先进后出(先关闭最后被调用的方法) 后进先出")])])]),t._v(" "),r("h2",{attrs:{id:"堆"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#堆","aria-hidden":"true"}},[t._v("#")]),t._v(" 堆")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("放置new出来的对象！")])]),t._v(" "),r("li",[r("p",[t._v("堆是一个不连续的内存空间，分配灵活，速度慢！")])])]),t._v(" "),r("h3",{attrs:{id:"常量池-堆中"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常量池-堆中","aria-hidden":"true"}},[t._v("#")]),t._v(" 常量池(堆中)")]),t._v(" "),r("ul",[r("li",[t._v("主要放置常量 例如字符串")])])])},[],!1,null,null,null);a.default=s.exports}}]);